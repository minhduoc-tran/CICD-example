// Test fixtures - static test data that can be reused across tests

/**
 * Sample metadata fixtures for testing
 */
export const metadataFixtures = {
  default: {
    title: "Create Next App",
    description: "Generated by create next app",
  },
  custom: {
    title: "Custom App Title",
    description: "Custom app description for testing",
  },
  empty: {
    title: "",
    description: "",
  },
} as const;

/**
 * Sample component props fixtures
 */
export const componentPropsFixtures = {
  homePageProps: {
    className:
      "flex min-h-screen items-center justify-center bg-zinc-50 font-sans dark:bg-black",
  },
  layoutProps: {
    children: "Test children content",
  },
} as const;

/**
 * Sample CSS class fixtures for testing styling
 */
export const cssClassFixtures = {
  container:
    "flex min-h-screen items-center justify-center bg-zinc-50 font-sans dark:bg-black",
  heading: "text-4xl font-bold text-zinc-800 dark:text-zinc-200",
  paragraph: "mt-4 text-lg text-zinc-600 dark:text-zinc-400",
  fontVariables: "--font-geist-sans --font-geist-mono antialiased",
} as const;
/**
 * Sample URL and routing fixtures
 */
export const routingFixtures = {
  paths: {
    home: "/",
    about: "/about",
    contact: "/contact",
  },
  searchParams: {
    empty: new URLSearchParams(),
    withQuery: new URLSearchParams("?q=test&page=1"),
  },
} as const;

/**
 * Sample error fixtures for testing error handling
 */
export const errorFixtures = {
  networkError: new Error("Network request failed"),
  validationError: new Error("Validation failed"),
  notFoundError: new Error("Resource not found"),
} as const;

/**
 * Sample DOM element fixtures
 */
export const domFixtures = {
  button: {
    tagName: "BUTTON",
    textContent: "Click me",
    className: "btn btn-primary",
  },
  input: {
    tagName: "INPUT",
    type: "text",
    value: "test value",
    placeholder: "Enter text",
  },
} as const;
